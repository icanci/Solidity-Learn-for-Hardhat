{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x83afafa9779ab472e9095b3bdf0351497c2d5a54c9e7145d52fb92f29b9d14d5",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "925259",
    "logsBloom": "0x
    "blockHash": "0x10692100c6e33c845633fb8d800e9db5fe2e89009c2053e7f8ea726ff4f6262a",
    "transactionHash": "0x83afafa9779ab472e9095b3bdf0351497c2d5a54c9e7145d52fb92f29b9d14d5",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "925259",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "d35c66a6956b0c424802202e2bcc42f1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n// solhint-disable-next-line interface-starts-with-i\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0x257a8d28fa83d3d942547c8e129ef465e4b5f3f31171e7be4739a4c98da6b4f0\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.7;\\n\\nimport \\\"./PriceConverter.sol\\\";\\n\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// \\u4f18\\u5316\\u4e4b\\u524d\\n// \\u521b\\u5efa\\u6b64\\u5408\\u7ea6\\u9700\\u8981\\u7684 gas\\uff1a840761\\n// Immutable Constant(\\u5e38\\u91cf)\\n// \\u4f7f\\u7528 Constant \\u4fee\\u9970 minimumUsd\\n// \\u521b\\u5efa\\u6b64\\u5408\\u7ea6\\u9700\\u8981\\u7684 gas\\uff1a821214\\n\\n// FundMe \\u5408\\u7ea6\\n// \\u5176\\u662f\\u4e00\\u4e2a\\u667a\\u80fd\\u5408\\u7ea6\\uff0c\\u53ef\\u4ee5\\u4f7f\\u4eba\\u4eec\\u53d1\\u8d77\\u4e00\\u4e2a\\u4f17\\u7b79\\n// \\u4eba\\u4eec\\u53ef\\u4ee5\\u5411\\u5176\\u53d1\\u9001ETH\\u3001Polygon\\u3001Fantom \\u6216\\u8005\\u662f\\u5176\\u4ed6\\u533a\\u5757\\u94fe\\u539f\\u751f\\u901a\\u8bc1\\n\\n// \\u8981\\u6c42\\n// \\u8fd9\\u4e2a\\u5408\\u7ea6\\u53ef\\u4ee5\\u4ece\\u7528\\u6237\\u90a3\\u91cc\\u83b7\\u53d6\\u8d44\\u91d1\\n// \\u53ef\\u4ee5\\u63d0\\u53d6\\u8d44\\u91d1\\n// \\u8bbe\\u7f6e\\u4e00\\u4e2a\\u4ee5 usd \\u8ba1\\u4ef7\\u7684\\u6700\\u5c0f\\u8d44\\u52a9\\u91d1\\u989d\\nerror NotOwner();\\n\\ncontract FundMe {\\n    // \\u6784\\u9020\\u51fd\\u6570\\uff0c\\u4f1a\\u5728\\u4f60\\u90e8\\u7f72\\u5408\\u7ea6\\u4e4b\\u540e\\u7acb\\u5373\\u8c03\\u7528\\u4e00\\u6b21\\n    // \\u6784\\u9020\\u51fd\\u6570\\u53ef\\u4ee5\\u63a5\\u6536\\u53c2\\u6570\\uff0c\\u90a3\\u6211\\u4eec\\u53ef\\u4ee5\\u5c06\\u4ef7\\u683c\\u6570\\u636e\\u7684\\u5730\\u5740\\u4f20\\u5165\\u8fdb\\u6765\\n    constructor(address priceFeedAddress) {\\n        // \\u8fd9\\u91cc\\u7684 sender \\u5c31\\u662f\\u90e8\\u7f72\\u8fd9\\u4e2a\\u5408\\u7ea6\\u7684\\u4eba\\n        i_owner = msg.sender;\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\n    }\\n\\n    AggregatorV3Interface public priceFeed;\\n\\n    using PriceConverter for uint256;\\n\\n    // \\u5bf9\\u4e8e Solidity \\u4e2d\\u53ea\\u9700\\u8981\\u8bbe\\u7f6e\\u4e00\\u6b21\\u7684\\u53d8\\u91cf \\u53ef\\u4ee5\\u901a\\u8fc7\\u4f18\\u5316\\uff0c\\u6765\\u8282\\u7701gas\\n    uint256 public constant MINIMUM_USD = 50 * 1e18;\\n\\n    address[] public funders;\\n\\n    mapping(address => uint256) public addressToAmountFunded;\\n\\n    address public immutable i_owner;\\n\\n    // fund \\u51fd\\u6570\\uff0c\\u4eba\\u4eec\\u53ef\\u4ee5\\u4f7f\\u7528\\u5176\\u6765\\u53d1\\u9001\\u8d44\\u91d1\\n    // paybale \\u5173\\u952e\\u5b57\\n    // \\u5c31\\u50cf\\u6211\\u4eec\\u7684\\u94b1\\u5305\\u53ef\\u4ee5\\u6301\\u6709\\u8d44\\u91d1\\uff0c\\u5408\\u7ea6\\u5730\\u5740\\u4e5f\\u53ef\\u4ee5\\u6301\\u6709\\u8d44\\u91d1\\n    // \\u6bcf\\u6b21\\u90e8\\u7f72\\u5408\\u7ea6\\u7684\\u65f6\\u5019\\uff0c\\u53ef\\u4ee5\\u83b7\\u5f97\\u4e00\\u4e2a\\u5408\\u7ea6\\u5730\\u5740\\uff0c\\u8fd9\\u4e2a\\u5730\\u5740\\u548c\\u94b1\\u5305\\u5730\\u5740\\u51e0\\u4e4e\\u4e00\\u81f4\\n    // \\u6240\\u4ee5\\u94b1\\u5305\\u548c\\u5408\\u7ea6\\u90fd\\u53ef\\u4ee5\\u6301\\u6709\\u50cf\\u662fETH\\u8fd9\\u6837\\u7684\\u539f\\u751f\\u533a\\u5757\\u94fe\\u901a\\u8bc1\\n\\n    // \\u5f53\\u4eba\\u4eec\\u7ed9\\u8fd9\\u4e2a\\u5408\\u7ea6\\u53d1\\u9001\\u8d44\\u91d1\\u7684\\u65f6\\u5019\\uff0c\\u6211\\u4eec\\u60f3\\u8981\\u8bb0\\u5f55\\u4e0b\\u6765\\u8fd9\\u4e9b\\u4eba\\n    function fund() public payable {\\n        // \\u8bbe\\u7f6e\\u4e00\\u4e2a\\u4ee5 usd \\u8ba1\\u4ef7\\u7684\\u6700\\u5c0f\\u8d44\\u52a9\\u91d1\\u989d\\n        // 1.\\u6211\\u4eec\\u600e\\u4e48\\u5411\\u8fd9\\u4e2a\\u5408\\u7ea6\\u8f6cETH\\n        // \\u901a\\u8fc7msg.value \\u53ef\\u4ee5\\u5f97\\u77e5\\u67d0\\u4eba\\u8f6c\\u8d26\\u7684\\u91d1\\u989d \\u5355\\u4f4d\\u662f wei\\n        // revert \\u5c06\\u4e4b\\u524d\\u7684\\u64cd\\u4f5c\\u56de\\u6eda\\uff0c\\u5e76\\u5c06\\u5269\\u4f59\\u7684gas\\u8fd4\\u56de\\n        // \\u6bd4\\u5982 fund \\u51fd\\u6570\\u9700\\u8981\\u82b1\\u8d39 1000gas\\n        // \\u5728 require \\u4e4b\\u524d\\uff0c\\u9700\\u8981\\u82b1\\u8d39 50gas\\n        // \\u4f46\\u662f\\u5728 require \\u5931\\u8d25\\uff0c\\u90a3\\u4e48\\u5219\\u9700\\u8981\\u8fd4\\u8fd8 1000 - 50 = 950 gas\\n\\n        // \\u8fd9\\u91cc\\u7684\\u503c\\u662f\\u4ee5\\u592a\\uff0c\\u5355\\u4f4d\\u662fwei \\u4f46\\u662f\\u6211\\u4eec\\u600e\\u4e48\\u628a\\u4ee5\\u592a\\u5e01\\u8f6c\\u6362\\u4e3ausd\\u5462\\uff1f\\u8fd9\\u5c31\\u662f\\u9884\\u8a00\\u673a\\u7684\\u4f5c\\u7528\\n        // \\u4e3a\\u4e86\\u83b7\\u53d6\\u4ee5\\u592a\\u5e01\\u7684\\u7f8e\\u5143\\u4ef7\\u683c\\uff0c\\u6211\\u4eec\\u9700\\u8981\\u4ece\\u533a\\u5757\\u94fe\\u4e4b\\u5916\\u83b7\\u5f97\\u4fe1\\u606f\\n        // \\u4e5f\\u5c31\\u662f\\u4f7f\\u7528\\u53bb\\u4e2d\\u5fc3\\u5316\\u7684\\u9884\\u8a00\\u673a\\u7f51\\u7edc\\uff0c\\u83b7\\u53d61\\u4e2aETH\\u7684usd\\u4ef7\\u683c\\n\\n        // getConversionRate \\u9700\\u8981\\u4f20\\u5165\\u4e00\\u4e2a\\u53c2\\u6570\\uff0c\\u4f46\\u662fmsg.value\\n        require(\\n            msg.value.getConversionRate(priceFeed) >= MINIMUM_USD,\\n            \\\"didn't send enough! \\\"\\n        );\\n        // \\u8bb0\\u5f55\\u4e0b\\u6bcf\\u4e2a funder\\n        // msg.sender \\u662f\\u4e00\\u4e2a\\u5168\\u5c40\\u5173\\u952e\\u5b57 \\u8868\\u793a\\u662f\\u8c03\\u7528\\u8fd9\\u4e2a\\u51fd\\u6570\\u7684\\u5730\\u5740 \\u5373 Account address\\n        funders.push(msg.sender);\\n        addressToAmountFunded[msg.sender] += msg.value;\\n        //\\n    }\\n\\n    // \\u5408\\u7ea6\\u7684\\u62e5\\u6709\\u8005\\u53ef\\u4ee5\\u63d0\\u53d6\\u4e0d\\u540c\\u7684funder\\u53d1\\u751f\\u7684\\u8d44\\u91d1\\n    // \\u56e0\\u4e3a\\u6211\\u4eec\\u8981\\u63d0\\u53d6\\u8d44\\u91d1\\uff0c\\u6240\\u4ee5\\u9700\\u8981\\u628a\\u4e0a\\u9762\\u5b58\\u50a8\\u7684\\u6570\\u636e\\u8bbe\\u7f6e\\u4e3a0\\n    // \\u6b64\\u65f6\\uff0c\\u65e0\\u8bba\\u662f\\u8c01\\u90fd\\u53ef\\u4ee5\\u4ece\\u8fd9\\u4e2a\\u5408\\u7ea6\\u63d0\\u6b3e\\uff1b\\u6211\\u4eec\\u4e0d\\u5e0c\\u671b\\u6240\\u6709\\u4eba\\u90fd\\u53ef\\u4ee5\\u63d0\\u6b3e\\n    // \\u6240\\u4ee5\\u6211\\u4eec\\u9700\\u8981\\u8bbe\\u5b9a\\u53ea\\u6709\\u5408\\u7ea6\\u7684\\u62e5\\u6709\\u8005\\u624d\\u80fd\\u8c03\\u7528 withdraw \\u51fd\\u6570\\n    function withdraw() public onlyOwner {\\n        // \\u5f53\\u524d\\u7684\\u8c03\\u7528\\u8005\\u548c\\u521b\\u5efa\\u5408\\u7ea6\\u7684\\uff0c\\u662f\\u5426\\u662f\\u4e00\\u4e2a\\u4eba\\n        // require(msg.sender == owner,\\\"Sender is not owner! \\\");\\n\\n        // for loop\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            // code\\n            address funder = funders[funderIndex];\\n            addressToAmountFunded[funder] = 0;\\n        }\\n        // \\u91cd\\u7f6e\\u6570\\u7ec4 \\u540e\\u9762\\u7684 0 \\u8868\\u793a\\u6ca1\\u6709\\u4e00\\u4e2a\\u5143\\u7d20\\u5728\\u91cc\\u9762\\uff0c\\u5982\\u679c\\u662f1\\uff0c\\u5219\\u8bf4\\u660e\\u67091\\u4e2a\\u5143\\u7d20\\u5728\\u91cc\\u9762\\n        funders = new address[](0);\\n        // \\u53d1\\u9001\\u8d44\\u91d1: \\u6211\\u4eec\\u5982\\u4f55\\u5b9e\\u9645\\u4ece\\u8fd9\\u4e2a\\u5408\\u7ea6\\u4e2d\\u63d0\\u53d6\\u8d44\\u91d1\\u5462\\uff1f\\u6216\\u8005\\u8bf4\\u6211\\u4eec\\u8be5\\u5982\\u4f55\\u628a\\u8d44\\u91d1\\u53d1\\u9001\\u7ed9\\u5408\\u7ea6\\u7684\\u8c03\\u7528\\u8005\\n        // \\u5982\\u4f55\\u9700\\u8981\\u53d1\\u9001\\u4ee5\\u592a\\u5e01\\u6216\\u8005\\u5176\\u4ed6\\u533a\\u5757\\u94fe\\u539f\\u751f\\u8d27\\u5e01\\u7684\\u8bdd\\uff0c\\u6709\\u4e09\\u79cd\\u4e0d\\u540c\\u7684\\u65b9\\u5f0f\\u53ef\\u4f9b\\u4f7f\\u7528\\n        // transfer this \\u8868\\u793a\\u6574\\u4e2a\\u5408\\u7ea6\\u672c\\u8eab .balance \\u5c31\\u662f\\u5f53\\u524d\\u8fd9\\u4e2a\\u5730\\u5740\\u7684\\u533a\\u5757\\u94fe\\u539f\\u751f\\u8d27\\u5e01\\u6216\\u8005\\u4ee5\\u592a\\u574a\\u4f59\\u989d\\u4e86\\n        // \\u8fd9\\u91cc\\u8fd8\\u662f\\u8981\\u505a\\u4e00\\u4e2a\\u7c7b\\u578b\\u8f6c\\u6362\\uff0c\\u628a msg.sender \\u4eceaddress\\u7c7b\\u578b\\u8f6c\\u4e3a payable address \\u7c7b\\u578b\\n\\n        // msg.sender = address\\n        // call \\u662f\\u5728 Solidity \\u4e2d\\u6bd4\\u8f83\\u5e95\\u5c42\\u7684\\u547d\\u4ee4\\u3002\\u53ef\\u4ee5\\u7528\\u6765\\u8c03\\u7528\\u51e0\\u4e4e\\u6240\\u6709\\u7684Solidity\\u51fd\\u6570\\n        // \\u5982\\u679c\\u51fd\\u6570\\u8c03\\u7528\\u6210\\u529f\\uff0c\\u90a3\\u4e48\\u5c31\\u8fd4\\u56detrue \\u5426\\u5219\\u8fd4\\u56defalse\\n        // dataReturned \\u6307\\u7684\\u662f \\u6211\\u4eec\\u8c03\\u7528\\u90a3\\u4e2a\\u51fd\\u6570\\u672c\\u8eab\\u5c31\\u8fd4\\u56de\\u4e00\\u4e9b\\u6570\\u636e\\u6216\\u8005\\u8bf4\\u6709\\u8fd4\\u56de\\u503c\\uff0c\\u90a3\\u4e48\\u5c31\\u662f\\u6b64\\u503c\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call Failed!\\\");\\n    }\\n\\n    // \\u4fee\\u9970\\u5668\\n    // \\u610f\\u601d\\u4f7f\\u7528 onlyOwner \\u6807\\u8bb0\\u7684\\u51fd\\u6570\\uff0c\\u5fc5\\u987b\\u5728\\u8c03\\u7528\\u4e4b\\u524d\\uff0c\\u5148\\u8c03\\u7528\\u4e00\\u4e0b onlyOwner \\u91cc\\u9762\\u7684\\u51fd\\u6570\\uff0c\\u518d\\u8fd0\\u884c\\u4e0b\\u5212\\u7ebf\\u7684\\u4ee3\\u7801\\uff0c\\u4e0b\\u5212\\u7ebf\\u7684\\u4ee3\\u7801\\u8868\\u793a\\u5269\\u4f59\\u7684\\u4ee3\\u7801\\n    modifier onlyOwner() {\\n        require(msg.sender == i_owner, \\\"Sender is not owner! \\\");\\n        if (msg.sender != i_owner) {\\n            revert NotOwner();\\n        }\\n        _;\\n    }\\n\\n    // \\u5982\\u679c\\u6709\\u4eba\\u5728\\u6ca1t\\u6709\\u8c03\\u7528fund\\u51fd\\u6570\\u5c31\\u5411\\u8fd9\\u4e2a\\u5408\\u7ea6\\u53d1\\u9001\\u4ee5\\u592a\\u5e01\\u7684\\u60c5\\u51b5\\u4e0b\\uff0c\\u600e\\u4e48\\u5904\\u7406\\n    // \\u7279\\u6b8a\\u51fd\\u6570\\n    // receive()\\n    // fallback()\\n\\n    // \\u7279\\u6b8a\\u51fd\\u6570\\uff0c\\u53ea\\u8981\\u6211\\u4eec\\u53d1\\u9001ETH\\u6216\\u8005\\u5411\\u8fd9\\u4e2a\\u5408\\u7ea6\\u53d1\\u9001\\u4ea4\\u6613\\n    // \\u53ea\\u8981\\u6ca1\\u6709\\u4e0e\\u8be5\\u4ea4\\u6613\\u76f8\\u5173\\u7684\\u6570\\u636e\\uff0c\\u8fd9\\u4e2a\\u51fd\\u6570\\u5c31\\u4f1a\\u88ab\\u89e6\\u53d1\\uff0c\\u7c7b\\u4f3cvue\\u4e2d\\u7684\\u94a9\\u5b50\\u51fd\\u6570\\u3001\\u751f\\u547d\\u5468\\u671f\\u51fd\\u6570\\n    // \\u5f53\\u4f60\\u5411\\u5408\\u7ea6\\u53d1\\u9001\\u4ea4\\u6613\\u7684\\u65f6\\u5019\\uff0c\\u5982\\u679c\\u6ca1\\u6709\\u6307\\u5b9a\\u67d0\\u4e2a\\u51fd\\u6570\\u3002receive \\u51fd\\u6570\\u5c31\\u4f1a\\u88ab\\u89e6\\u53d1(\\u5f53 calldata \\u6ca1\\u6709\\u503c\\u7684\\u65f6\\u5019)\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    // \\u5373\\u4f7f\\u6570\\u636e\\u548c\\u4ea4\\u6613\\u4e00\\u8d77\\u88ab\\u53d1\\u9001\\uff0c\\u4ed6\\u4e5f\\u4f1a\\u89e6\\u53d1\\n    fallback() external payable {\\n        fund();\\n    }\\n}\\n\",\"keccak256\":\"0x1f8a8a69659480c26f402335d23cffab5687a6e37c3885dc1145754d64bdec25\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.7;\\n\\n// remix \\u53ef\\u4ee5\\u81ea\\u52a8\\u8bc6\\u522b @chainlink/contracts \\u5c31\\u662f\\u6307\\u5411 chainlink/contracts de NPM \\u5305\\nimport {AggregatorV3Interface} from \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// library \\u4e0d\\u80fd\\u6709\\u4efb\\u4f55\\u9759\\u6001\\u53d8\\u91cf\\uff0c\\u4e5f\\u4e0d\\u80fd\\u53d1\\u9001ETH\\n// \\u4e00\\u4e2a\\u5e93\\u7684\\u6240\\u6709\\u7684function\\u90fd\\u662finternal\\u7684\\nlibrary PriceConverter {\\n    function getPrice(\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        // abi\\n        // address 0x694AA1769357215DE4FAC081bf1f309aDC325306\\n        // \\u521b\\u5efa\\u5408\\u7ea6\\u5bf9\\u8c61\\n        // (uint80 roundId,int256 price, uint startedAt,uint timestamp, uint80 answerInRound) = dataFeed.latestRoundData();\\n        // \\u53ef\\u4ee5\\u5c06\\u4e0d\\u5173\\u5fc3\\u7684\\u6570\\u636e\\u5220\\u9664\\u6389\\uff0c\\u4f46\\u662f\\u9700\\u8981\\u4fdd\\u7559\\u9017\\u53f7\\n        // \\u5176\\u4e2d latestRoundData \\u7684\\u8fd4\\u56de\\u503c\\u53ef\\u4ee5\\u8fd4\\u56de\\u591a\\u4e2a\\u6570\\u636e\\n        (, int256 price, , , ) = priceFeed.latestRoundData();\\n        // ETH in terms of USD\\n        // \\u56e0\\u4e3aSolidity\\u662f\\u4e0d\\u80fd\\u4f7f\\u7528\\u5c0f\\u6570\\u7684\\n        return uint256(price * 1e10); // 1 ** 10000000000\\n    }\\n\\n    //\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        // ethPrice \\u548c ethAmount \\u90fd\\u662f18\\u4f4d\\u7684\\uff0c\\u5982\\u679c\\u4e0d\\u9664\\u4ee518\\u4e2a0\\uff0c\\u90a3\\u4e48\\u5c31\\u4f1a\\u53d8\\u621036\\u4f4d\\n        // such as ethPrice = 3000_000000000000000000 \\u5355\\u4f4d\\u662f\\u6bcf\\u4e2aETH\\u7684usd\\u4ef7\\u683c\\n        //         ethAmount = 1_000000000000000000 \\u5355\\u4f4d\\u662fwei\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18;\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xa83c6bf694038a2f8a31898c06ac68a4dee5882a0a8a55dac57cd703ad9b9e41\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620010db380380620010db8339818101604052810190620000379190620000cc565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b81525050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000151565b600081519050620000c68162000137565b92915050565b600060208284031215620000e557620000e462000132565b5b6000620000f584828501620000b5565b91505092915050565b60006200010b8262000112565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6200014281620000fe565b81146200014e57600080fd5b50565b60805160601c610f5d6200017e600039600081816102e40152818161037201526105fc0152610f5d6000f3fe6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e2565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610849565b6105b1565b6040516100d89190610a82565b60405180910390f35b3480156100ed57600080fd5b506100f66105c9565b6040516101039190610a82565b60405180910390f35b34801561011857600080fd5b506101216105d6565b60405161012e9190610a07565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b506101566105fa565b60405161016391906109ec565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610876565b61061e565b6040516101a091906109ec565b60405180910390f35b6802b5e3af16b18800006101e660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461065d90919063ffffffff16565b1015610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610a42565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d99190610ab9565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610370576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036790610a22565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f5576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104a15760006001828154811061041b5761041a610dea565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049990610d43565b9150506103f8565b50600067ffffffffffffffff8111156104bd576104bc610e19565b5b6040519080825280602002602001820160405280156104eb5781602001602082028036833780820191505090505b5060019080519060200190610501929190610739565b5060003373ffffffffffffffffffffffffffffffffffffffff1647604051610528906109d7565b60006040518083038185875af1925050503d8060008114610565576040519150601f19603f3d011682016040523d82523d6000602084013e61056a565b606091505b50509050806105ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a590610a62565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b6802b5e3af16b188000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061062e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061066983610699565b90506000670de0b6b3a764000085836106829190610c57565b61068c9190610b0f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106e257600080fd5b505afa1580156106f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071a91906108a3565b5050509150506402540be400816107319190610b40565b915050919050565b8280548282559060005260206000209081019282156107b2579160200282015b828111156107b15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610759565b5b5090506107bf91906107c3565b5090565b5b808211156107dc5760008160009055506001016107c4565b5090565b6000813590506107ef81610ecb565b92915050565b60008151905061080481610ee2565b92915050565b60008135905061081981610ef9565b92915050565b60008151905061082e81610ef9565b92915050565b60008151905061084381610f10565b92915050565b60006020828403121561085f5761085e610e48565b5b600061086d848285016107e0565b91505092915050565b60006020828403121561088c5761088b610e48565b5b600061089a8482850161080a565b91505092915050565b600080600080600060a086880312156108bf576108be610e48565b5b60006108cd88828901610834565b95505060206108de888289016107f5565b94505060406108ef8882890161081f565b93505060606109008882890161081f565b925050608061091188828901610834565b9150509295509295909350565b61092781610cb1565b82525050565b61093681610d0d565b82525050565b6000610949601583610aa8565b915061095482610e4d565b602082019050919050565b600061096c601483610aa8565b915061097782610e76565b602082019050919050565b600061098f600083610a9d565b915061099a82610e9f565b600082019050919050565b60006109b2600c83610aa8565b91506109bd82610ea2565b602082019050919050565b6109d181610ced565b82525050565b60006109e282610982565b9150819050919050565b6000602082019050610a01600083018461091e565b92915050565b6000602082019050610a1c600083018461092d565b92915050565b60006020820190508181036000830152610a3b8161093c565b9050919050565b60006020820190508181036000830152610a5b8161095f565b9050919050565b60006020820190508181036000830152610a7b816109a5565b9050919050565b6000602082019050610a9760008301846109c8565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610ac482610ced565b9150610acf83610ced565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b0457610b03610d8c565b5b828201905092915050565b6000610b1a82610ced565b9150610b2583610ced565b925082610b3557610b34610dbb565b5b828204905092915050565b6000610b4b82610cc3565b9150610b5683610cc3565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610b9557610b94610d8c565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610bd257610bd1610d8c565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610c0f57610c0e610d8c565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610c4c57610c4b610d8c565b5b828202905092915050565b6000610c6282610ced565b9150610c6d83610ced565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ca657610ca5610d8c565b5b828202905092915050565b6000610cbc82610ccd565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610d1882610d1f565b9050919050565b6000610d2a82610d31565b9050919050565b6000610d3c82610ccd565b9050919050565b6000610d4e82610ced565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d8157610d80610d8c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f53656e646572206973206e6f74206f776e657221200000000000000000000000600082015250565b7f6469646e27742073656e6420656e6f7567682120000000000000000000000000600082015250565b50565b7f43616c6c204661696c6564210000000000000000000000000000000000000000600082015250565b610ed481610cb1565b8114610edf57600080fd5b50565b610eeb81610cc3565b8114610ef657600080fd5b50565b610f0281610ced565b8114610f0d57600080fd5b50565b610f1981610cf7565b8114610f2457600080fd5b5056fea26469706673582212205ca0ba2039d0ba4ef0c3a30381ef618cdcb60fe2e5e7327c4c3f9537e494430564736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063741bef1a1161004e578063741bef1a1461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633ccfd60b1461008d5780633e47d6f3146100a45780636b69a592146100e157610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a26102e2565b005b3480156100b057600080fd5b506100cb60048036038101906100c69190610849565b6105b1565b6040516100d89190610a82565b60405180910390f35b3480156100ed57600080fd5b506100f66105c9565b6040516101039190610a82565b60405180910390f35b34801561011857600080fd5b506101216105d6565b60405161012e9190610a07565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b506101566105fa565b60405161016391906109ec565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610876565b61061e565b6040516101a091906109ec565b60405180910390f35b6802b5e3af16b18800006101e660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461065d90919063ffffffff16565b1015610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021e90610a42565b60405180910390fd5b6001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102d99190610ab9565b92505081905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610370576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036790610a22565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f5576040517f30cd747100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104a15760006001828154811061041b5761041a610dea565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061049990610d43565b9150506103f8565b50600067ffffffffffffffff8111156104bd576104bc610e19565b5b6040519080825280602002602001820160405280156104eb5781602001602082028036833780820191505090505b5060019080519060200190610501929190610739565b5060003373ffffffffffffffffffffffffffffffffffffffff1647604051610528906109d7565b60006040518083038185875af1925050503d8060008114610565576040519150601f19603f3d011682016040523d82523d6000602084013e61056a565b606091505b50509050806105ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a590610a62565b60405180910390fd5b50565b60026020528060005260406000206000915090505481565b6802b5e3af16b188000081565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6001818154811061062e57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061066983610699565b90506000670de0b6b3a764000085836106829190610c57565b61068c9190610b0f565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156106e257600080fd5b505afa1580156106f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071a91906108a3565b5050509150506402540be400816107319190610b40565b915050919050565b8280548282559060005260206000209081019282156107b2579160200282015b828111156107b15782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610759565b5b5090506107bf91906107c3565b5090565b5b808211156107dc5760008160009055506001016107c4565b5090565b6000813590506107ef81610ecb565b92915050565b60008151905061080481610ee2565b92915050565b60008135905061081981610ef9565b92915050565b60008151905061082e81610ef9565b92915050565b60008151905061084381610f10565b92915050565b60006020828403121561085f5761085e610e48565b5b600061086d848285016107e0565b91505092915050565b60006020828403121561088c5761088b610e48565b5b600061089a8482850161080a565b91505092915050565b600080600080600060a086880312156108bf576108be610e48565b5b60006108cd88828901610834565b95505060206108de888289016107f5565b94505060406108ef8882890161081f565b93505060606109008882890161081f565b925050608061091188828901610834565b9150509295509295909350565b61092781610cb1565b82525050565b61093681610d0d565b82525050565b6000610949601583610aa8565b915061095482610e4d565b602082019050919050565b600061096c601483610aa8565b915061097782610e76565b602082019050919050565b600061098f600083610a9d565b915061099a82610e9f565b600082019050919050565b60006109b2600c83610aa8565b91506109bd82610ea2565b602082019050919050565b6109d181610ced565b82525050565b60006109e282610982565b9150819050919050565b6000602082019050610a01600083018461091e565b92915050565b6000602082019050610a1c600083018461092d565b92915050565b60006020820190508181036000830152610a3b8161093c565b9050919050565b60006020820190508181036000830152610a5b8161095f565b9050919050565b60006020820190508181036000830152610a7b816109a5565b9050919050565b6000602082019050610a9760008301846109c8565b92915050565b600081905092915050565b600082825260208201905092915050565b6000610ac482610ced565b9150610acf83610ced565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610b0457610b03610d8c565b5b828201905092915050565b6000610b1a82610ced565b9150610b2583610ced565b925082610b3557610b34610dbb565b5b828204905092915050565b6000610b4b82610cc3565b9150610b5683610cc3565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610b9557610b94610d8c565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610bd257610bd1610d8c565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610c0f57610c0e610d8c565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610c4c57610c4b610d8c565b5b828202905092915050565b6000610c6282610ced565b9150610c6d83610ced565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ca657610ca5610d8c565b5b828202905092915050565b6000610cbc82610ccd565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600069ffffffffffffffffffff82169050919050565b6000610d1882610d1f565b9050919050565b6000610d2a82610d31565b9050919050565b6000610d3c82610ccd565b9050919050565b6000610d4e82610ced565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610d8157610d80610d8c565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b7f53656e646572206973206e6f74206f776e657221200000000000000000000000600082015250565b7f6469646e27742073656e6420656e6f7567682120000000000000000000000000600082015250565b50565b7f43616c6c204661696c6564210000000000000000000000000000000000000000600082015250565b610ed481610cb1565b8114610edf57600080fd5b50565b610eeb81610cc3565b8114610ef657600080fd5b50565b610f0281610ced565b8114610f0d57600080fd5b50565b610f1981610cf7565b8114610f2457600080fd5b5056fea26469706673582212205ca0ba2039d0ba4ef0c3a30381ef618cdcb60fe2e5e7327c4c3f9537e494430564736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 72,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "priceFeed",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 83,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 87,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}